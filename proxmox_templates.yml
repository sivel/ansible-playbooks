- hosts: vivo
  gather_facts: false
  tasks:
    - name: Locate all build images
      find:
        paths: /mnt/data/robox/output
        recurse: yes
        patterns: '*.qcow2'
      register: qcow2

    - name: Create hosts that represent images
      add_host:
        name: '{{ name }}'
        qcow2: '{{ item.path }}'
        groups:
          - templates
      loop: '{{ qcow2.files|sort(attribute="path") }}'
      loop_control:
        label: '{{ name }}'
      vars:
        name: '{{ item.path|basename|splitext|first|replace("_", "-") }}'

- hosts: localhost
  gather_facts: false
  tasks:
    - module_defaults:
        uri:
          headers:
            Authorization: 'PVEAPIToken={{ pve_api_token }}'
          validate_certs: false
      block:
        - name: Fetch list of existing proxmox VMs
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu
          register: vms
          delegate_to: localhost
          run_once: true

        - name: Add vmid to existing images
          set_fact:
            vmid: '{{ (vms.json.data|selectattr("name", "eq", item)|default([{"vmid": omit}], true)|first)["vmid"] }}'
          loop: '{{ groups.templates }}'
          delegate_to: '{{ item }}'
          delegate_facts: true

        - name: Determine which images are not yet deployed to proxmox
          set_fact:
            missing: '{{ hostvars|dictsort|selectattr("0", "in", groups.templates)|selectattr("1.vmid", "undefined")|map(attribute="0")|sort }}'
            existing: '{{ vms.json.data|map(attribute="vmid")|map("int")|sort }}'
          run_once: true

        - name: Create mapping for missing images to associate unused vmids
          set_fact:
            id_map: '{{ dict(missing|sort|zip(pool)) }}'
          vars:
            pool: '{{ range(101, 1000)|list|difference(existing)|sort }}'
          run_once: true

        - name: Create hosts that represent missing images
          add_host:
            name: '{{ item }}'
            vmid: '{{ id_map[item] }}'
            groups:
              - missing
          loop: '{{ missing }}'

- hosts: missing
  gather_facts: false
  module_defaults:
    uri:
      headers:
        Authorization: 'PVEAPIToken={{ pve_api_token }}'
      validate_certs: false
  serial: 1
  tasks:
    - name: Create VM
      uri:
        url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu
        method: POST
        body:
          name: '{{ inventory_hostname }}'
          vmid: '{{ vmid }}'
          cores: 2
          memory: 2048
          balloon: 2048
          scsihw: virtio-scsi-pci
          net0: 'bridge=vmbr0,model=virtio,firewall=1'
          agent: 'enabled=1'
        body_format: form-urlencoded
      delegate_to: localhost
      changed_when: true

    - name: Import image into VM
      command: qm importdisk {{ vmid }} {{ qcow2 }} data2
      become: true
      delegate_to: vivo

    - delegate_to: localhost
      block:
        - name: Reconfigure VM to utilize newly imported disk
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}/config
            method: PUT
            body:
              scsi0: 'data2:vm-{{ vmid }}-disk-0,size=64G'
            body_format: form-urlencoded
          changed_when: true

        # This cannot unfortunately be done in the above task, as we get a validation error
        # that scsi0 does not yet exist
        - name: Reconfigure VM to boot from new disk
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}/config
            method: PUT
            body:
              boot: order=scsi0
            body_format: form-urlencoded
          changed_when: true

        - name: Convert VM to template
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}/template
            method: POST
          changed_when: true
