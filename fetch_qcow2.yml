- hosts: localhost
  gather_facts: false
  vars:
    distros:
      centos7:
        url: https://cloud.centos.org/centos/7/images/
        # checksum: https://cloud.centos.org/centos/7/images/sha256sum.txt
      centos_stream8:
        url: https://cloud.centos.org/centos/8-stream/x86_64/images/
        checksum: https://cloud.centos.org/centos/8-stream/x86_64/images/CHECKSUM
      centos_stream9:
        url: https://cloud.centos.org/centos/9-stream/x86_64/images/
        checksum: https://cloud.centos.org/centos/9-stream/x86_64/images/CHECKSUM
      fedora35:
        url: https://download.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/
        checksum: https://download.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-35-1.2-x86_64-CHECKSUM
      ubuntu2204:
        url: https://cloud-images.ubuntu.com/jammy/current/
        prefix: ubuntu-22.04-
        checksum: https://cloud-images.ubuntu.com/jammy/current/SHA256SUMS
      ubuntu2110:
        url: https://cloud-images.ubuntu.com/impish/current/
        prefix: ubuntu-21.10-
        checksum: https://cloud-images.ubuntu.com/impish/current/SHA256SUMS
      ubuntu2004:
        url: https://cloud-images.ubuntu.com/focal/current/
        prefix: ubuntu-20.04-
        checksum: https://cloud-images.ubuntu.com/focal/current/SHA256SUMS
      ubuntu1804:
        url: https://cloud-images.ubuntu.com/bionic/current/
        prefix: ubuntu-18.04-
        checksum: https://cloud-images.ubuntu.com/bionic/current/SHA256SUMS
      debian11:
        url: https://cloud.debian.org/images/cloud/bullseye/latest/
        checksum: https://cloud.debian.org/images/cloud/bullseye/latest/SHA512SUMS
        checksum_algo: sha512
      debian10:
        url: https://cloud.debian.org/images/cloud/buster/latest/
        checksum: https://cloud.debian.org/images/cloud/buster/latest/SHA512SUMS
        checksum_algo: sha512
      arch:
        url: https://mirror.pkgbuild.com/images/latest/
        checksum_tmpl: "{}.SHA256"
      freebsd13:
        url: '{{ bsd_cloud_image }}/images/freebsd/13.0/freebsd-13.0-zfs.qcow2'
      netbsd9:
        url: '{{ bsd_cloud_image }}/images/netbsd/9.2/2021-12-11/netbsd-9.2.qcow2'
      openbsd7:
        url: '{{ bsd_cloud_image }}/images/openbsd/7.0/2021-12-11/openbsd-7.0.qcow2'
      dragonflybsd6:
        url: '{{ bsd_cloud_image }}/images/dragonflybsd/6.0.0/dragonflybsd-6.0.0-hammer2.qcow2'
      alma8:
        url: https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/
        checksum: https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/CHECKSUM
      alma9:
        url: https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/
        checksum: https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/CHECKSUM
      rocky8:
        url: https://download.rockylinux.org/pub/rocky/8/images/
        checksum: https://download.rockylinux.org/pub/rocky/8/images/CHECKSUM
      amazonlinux:
        url: https://cdn.amazonlinux.com/os-images/latest/kvm/
        checksum: https://cdn.amazonlinux.com/os-images/latest/kvm/SHA256SUMS
      opensuse15:
        url: https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.3/images/
        checksum_tmpl: "{}.sha256"
      # rhel8:
      #   url: https://access.cdn.redhat.com/...
      # rhel9:
      #   url: https://access.cdn.redhat.com/...
    bsd_cloud_image: https://object-storage.public.mtl1.vexxhost.net/swift/v1/1dbafeefbd4f4c80864414a441e72dd2/bsd-cloud-image.org
  tasks:
    - name: Create inventory for distros
      add_host:
        name: '{{ item.0 }}'
        groups:
          - qcow2
        url: '{{ item.1.url }}'
        checksum_algo: '{{ item.1.checksum_algo|default("sha256") }}'
        prefix: '{{ item.1.prefix|default(omit) }}'
        checksum: '{{ ([item.1.checksum, item.1.checksum_tmpl]|select("defined") or [None])|first }}'
      loop: '{{ distros|dictsort }}'
      loop_control:
        label: '{{ item.0 }}'

- hosts: qcow2
  gather_facts: false
  vars:
    weights:
      - nocloud
      - kvm
      - cloud-base
      - cloudimg
      - genericcloud
    regex: '[\w\.-]+(?:genericcloud|cloudimg|cloud-base|kvm|nocloud)[\w\.-]+(?:\.qcow2|(?<!disk-kvm)\.img)'
  tasks:
    - when: url|urlsplit('path')|splitext|last not in [".qcow2", ".img"]
      block:
        - name: Fetch index
          uri:
            url: '{{ url }}'
            return_content: true
          register: index_list
          delegate_to: localhost

        - name: Find the latest image
          set_fact:
            qcow2_src: '{{ [base|trim("/"), latest]|join("/") }}'
            qcow2_dest: '{{ prefix|default("") ~ latest|urlsplit("path")|splitext|first }}.qcow2'
          vars:
            base: '{{ url if url|last == "/" else url|dirname }}'
            all_matches: '{{ index_list.content|regex_findall(regex, ignorecase=true)|reject("contains", "latest")|unique }}'
            sixfour: '{{ all_matches|select("search", "(amd64|x86_64)", ignorecase=true) }}'
            no_uefi: '{{ sixfour|reject("search", "uefi", ignorecase=true) }}'
            latest: '{{ no_uefi|weight_sort(weights)|last }}'

    - name: Set facts for explicit urls
      set_fact:
        qcow2_src: '{{ url }}'
        qcow2_dest: '{{ url|urlsplit("path")|basename|splitext|first }}.qcow2'
      when: url|urlsplit('path')|splitext|last in [".qcow2", ".img"]

    - name: Download image
      threaded_get_url:
        url: '{{ qcow2_src }}'
        dest: /mnt/data/cloudimg/{{ qcow2_dest }}
        threads: 8
        timeout: 60
        checksum: '{{ omit if not checksum else checksum_algo ~ ":" ~ checksum.format(qcow2_src) }}'
      register: downloads
      throttle: 1
      delegate_to: '{{ groups.vivo|first }}'

- hosts: vivo
  gather_facts: false
  tasks:
    - name: Locate all cloudimg
      find:
        paths:
          - /mnt/data/cloudimg
        patterns:
          - '*.qcow2'
      register: qcow2

    - name: Set facts for images to clean up
      set_fact:
        to_remove: '{{ to_remove }}'
        to_remove_names: '{{ to_remove|map("splitext")|map(attribute="0")|map("replace", "_", "-") }}'
        changed_downloaded: '{{ changed_downloaded }}'
        changed_downloaded_names: '{{ changed_downloaded|map("splitext")|map(attribute="0")|map("replace", "_", "-") }}'
      vars:
        downloads: '{{ hostvars|dictsort|selectattr("1.downloads", "defined")|map(attribute="1.downloads") }}'
        downloaded: '{{ downloads|map(attribute="dest")|map("basename") }}'
        changed_downloaded: '{{ downloads|select("changed")|map(attribute="dest")|map("basename") }}'
        to_remove: '{{ qcow2.files|map(attribute="path")|map("basename")|difference(downloaded)|reject("contains", "rhel") }}'

    - when: changed_downloaded or to_remove is truthy
      module_defaults:
        uri:
          headers:
            Authorization: 'PVEAPIToken={{ pve_api_token }}'
          validate_certs: false
      delegate_to: localhost
      block:
        - name: Fetch list of existing proxmox VMs
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu
          register: vms

        - name: Determine which templates need replaced
          set_fact:
            to_remove_vmids: '{{ select_to_remove_names + select_changed_downloaded_names }}'
          vars:
            select_to_remove_names: '{{ vms.json.data|selectattr("name", "in", to_remove_names)|map(attribute="vmid") }}'
            select_changed_downloaded_names: '{{ vms.json.data|selectattr("name", "in", changed_downloaded_names)|map(attribute="vmid") }}'

        - name: Stop the VM
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}/status/stop
            method: POST
            status_code:
              - 200
              - 404
          changed_when: true
          loop: '{{ to_remove_vmids }}'
          loop_control:
            loop_var: vmid

        - name: Destroy the VM
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}?purge=1
            method: DELETE
            status_code:
              - 200
              - 404
          changed_when: true
          loop: '{{ to_remove_vmids }}'
          loop_control:
            loop_var: vmid

    - name: Remove old versions
      file:
        path: /mnt/data/cloudimg/{{ item }}
        state: absent
      loop: '{{ to_remove }}'

- import_playbook: proxmox_templates.yml
