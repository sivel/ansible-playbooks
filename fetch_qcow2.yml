- hosts: localhost
  gather_facts: false
  vars:
    distros:
      centos7:
        url: https://cloud.centos.org/centos/7/images/
        # checksum: https://cloud.centos.org/centos/7/images/sha256sum.txt
        pattern: '(?P<href>CentOS-7-x86_64-GenericCloud-\d+.qcow2)'
      centos_stream8:
        url: https://cloud.centos.org/centos/8-stream/x86_64/images/
        checksum: https://cloud.centos.org/centos/8-stream/x86_64/images/CHECKSUM
      centos_stream9:
        url: https://cloud.centos.org/centos/9-stream/x86_64/images/
        checksum: https://cloud.centos.org/centos/9-stream/x86_64/images/CHECKSUM
      fedora35:
        url: https://download.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/
        checksum: https://download.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-35-1.2-x86_64-CHECKSUM
      fedora36:
        url: https://download.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/
        checksum: https://getfedora.org/static/checksums/36/images/Fedora-Cloud-36-1.5-x86_64-CHECKSUM
      ubuntu2204:
        url: https://cloud-images.ubuntu.com/jammy/current/
        prefix: ubuntu-22.04-
        checksum: https://cloud-images.ubuntu.com/jammy/current/SHA256SUMS
      ubuntu2004:
        url: https://cloud-images.ubuntu.com/focal/current/
        prefix: ubuntu-20.04-
        checksum: https://cloud-images.ubuntu.com/focal/current/SHA256SUMS
      ubuntu1804:
        url: https://cloud-images.ubuntu.com/bionic/current/
        prefix: ubuntu-18.04-
        checksum: https://cloud-images.ubuntu.com/bionic/current/SHA256SUMS
      debian11:
        url: https://cloud.debian.org/images/cloud/bullseye/latest/
        checksum: https://cloud.debian.org/images/cloud/bullseye/latest/SHA512SUMS
        checksum_algo: sha512
      debian10:
        url: https://cloud.debian.org/images/cloud/buster/latest/
        checksum: https://cloud.debian.org/images/cloud/buster/latest/SHA512SUMS
        checksum_algo: sha512
      arch:
        url: https://mirror.pkgbuild.com/images/latest/
        pattern: '(?P<href>Arch-Linux-x86_64-cloudimg-[\d\.]+\.qcow2)'
        checksum_tmpl: "{}.SHA256"
      freebsd13:
        url: '{{ bsd_cloud_image }}/images/freebsd/13.0/freebsd-13.0-zfs.qcow2'
        checksum: fb0c9e21d486e8330a22bf7096c92f538e4e7573141f0ff0d0f1ae78baa2357d
      netbsd9:
        url: '{{ bsd_cloud_image }}/images/netbsd/9.2/2021-12-11/netbsd-9.2.qcow2'
        checksum: a5f6c1b548578628eafe6755da1758e22388f96fa3f2c89db2dc2f17140eeeff
      openbsd7:
        url: '{{ bsd_cloud_image }}/images/openbsd/7.0/2021-12-11/openbsd-7.0.qcow2'
        checksum: e82e89d213bb478f472a6cf2a3405f862c6facc99fb6567f8defdf9d9cfd6c93
      dragonflybsd6:
        url: '{{ bsd_cloud_image }}/images/dragonflybsd/6.0.0/dragonflybsd-6.0.0-hammer2.qcow2'
        checksum: 6203bd36f3a20a6ee0006169cca66cff6cbc09705b72e2b67e19c1f9d547a999
      alma8:
        url: https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/
        checksum: https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/CHECKSUM
      alma9:
        url: https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/
        checksum: https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/CHECKSUM
      rocky8:
        url: https://download.rockylinux.org/pub/rocky/8/images/
        checksum: https://download.rockylinux.org/pub/rocky/8/images/CHECKSUM
      rocky9:
        url: https://download.rockylinux.org/pub/rocky/9/images/x86_64/
        checksum_tmpl: "{}.CHECKSUM"
      amazonlinux:
        url: https://cdn.amazonlinux.com/os-images/latest/kvm/
        checksum: https://cdn.amazonlinux.com/os-images/latest/kvm/SHA256SUMS
      opensuse15:
        url: https://download.opensuse.org/repositories/Cloud:/Images:/Leap_15.4/images/
        checksum_tmpl: "{}.sha256"
      # rhel7:
      #   url: https://access.cdn.redhat.com/...
      # rhel8:
      #   url: https://access.cdn.redhat.com/...
      # rhel9:
      #   url: https://access.cdn.redhat.com/...
    bsd_cloud_image: https://object-storage.public.mtl1.vexxhost.net/swift/v1/1dbafeefbd4f4c80864414a441e72dd2/bsd-cloud-image.org
  tasks:
    - name: Create inventory for distros
      add_host:
        name: '{{ item.0 }}'
        groups:
          - qcow2
        url: '{{ item.1.url }}'
        checksum_algo: '{{ item.1.checksum_algo|default("sha256") }}'
        prefix: '{{ item.1.prefix|default(omit) }}'
        checksum: '{{ ([item.1.checksum, item.1.checksum_tmpl]|select("defined") or [None])|first }}'
        only64: '{{ item.1.only64|default(false) }}'
        pattern: '{{ item.1.pattern|default(none) }}'
      loop: '{{ distros|dictsort }}'
      loop_control:
        label: '{{ item.0 }}'

- hosts: qcow2:&{{ limit|default('all') }}
  gather_facts: false
  order: sorted
  tasks:
    - when: url|urlsplit('path')|splitext|last not in [".qcow2", ".img"]
      block:
        - name: Fetch index
          uri:
            url: '{{ url }}'
            return_content: true
          register: index_list
          delegate_to: localhost

        - name: Find the latest image
          set_fact:
            qcow2_src: '{{ url }}{{ latest.src }}'
            qcow2_dest: '{{ prefix|default("") }}{{ latest.dest }}'
          vars:
            latest: '{{ index_list.content|newest_image(sixfour=not only64, pattern=pattern) }}'

    - name: Set facts for explicit urls
      set_fact:
        qcow2_src: '{{ url }}'
        qcow2_dest: '{{ latest.dest }}'
      vars:
        latest: '{{ url|newest_image(sixfour=not only64) }}'
      when: url|urlsplit('path')|splitext|last in [".qcow2", ".img"]

    - delegate_to: '{{ groups.vivo|first }}'
      block:
        - debug:
            msg:
              qcow2_src: '{{ qcow2_src }}'
              qcow2_dest: '{{ qcow2_dest }}'
          throttle: 1

        - name: Download image
          threaded_get_url:
            url: '{{ qcow2_src }}'
            dest: /mnt/data/cloudimg/{{ qcow2_dest }}
            threads: 8
            timeout: 60
            checksum: '{{ omit if not checksum else checksum_algo ~ ":" ~ checksum.format(qcow2_src) }}'
          register: downloads
          # when: checksum_result is failed
          throttle: 1

- hosts: vivo
  gather_facts: false
  tasks:
    - name: Locate all cloudimg
      find:
        paths:
          - /mnt/data/cloudimg
        patterns:
          - '*.qcow2'
      register: qcow2

    - set_fact:
        updated_images: '{{ hostvars|select_updated_images(qcow2) }}'

    - debug:
        var: updated_images

    - when: updated_images.remove_names is truthy
      module_defaults:
        uri:
          headers:
            Authorization: 'PVEAPIToken={{ pve_api_token }}'
          validate_certs: false
      delegate_to: localhost
      block:
        - name: Fetch list of existing proxmox VMs
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu
          register: vms

        - name: Determine which templates need replaced
          set_fact:
            to_remove_vmids: '{{ vms.json.data|selectattr("name", "in", updated_images.remove_names)|map(attribute="vmid") }}'

        - name: Stop the VM
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}/status/stop
            method: POST
            status_code:
              - 200
              - 404
          changed_when: true
          loop: '{{ to_remove_vmids }}'
          loop_control:
            loop_var: vmid

        - name: Destroy the VM
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}?purge=1
            method: DELETE
            status_code:
              - 200
              - 404
          changed_when: true
          loop: '{{ to_remove_vmids }}'
          loop_control:
            loop_var: vmid

        - name: Wait for VM to be destroyed
          uri:
            url: https://vivo.noc.sivel.net:8006/api2/json/nodes/vivo/qemu/{{ vmid }}/status/current
            method: GET
            status_code:
              - 500
          loop: '{{ to_remove_vmids }}'
          loop_control:
            loop_var: vmid
          register: destroy
          until: destroy is successful
          delay: 1
          retries: 30

    - name: Remove old versions
      file:
        path: /mnt/data/cloudimg/{{ item }}
        state: absent
      loop: '{{ updated_images.remove_files }}'

- import_playbook: proxmox_templates.yml
