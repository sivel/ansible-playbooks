---
- name: Create users
  user:
    name: "{{ item.name }}"
    comment: "{{ item.comment|default(item.name) }}"
    state: "{{ item.state|default('present') }}"
    shell: "{{ item.shell|default('/bin/bash') }}"
    createhome: "{{ item.createhome|default('yes') }}"
    group: "{{ item.name }}"
    groups: "{{ item.groups|default([]) }}"
    password: "{{ item.password }}"
    update_password: "{{ item.update_password|default('on_create') }}"
    append: true
    home: "{{ item.home|default('/home/' ~ item.name) }}"
  when: item.hostgroups == 'all' or inventory_hostname in item.hostgroups or item.hostgroups|intersect(group_names)|list != []
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create hushlogin
  copy:
    content: ''
    dest: '/home/{{ item.name }}/.hushlogin'
  when: item.hostgroups == 'all' or inventory_hostname in item.hostgroups or item.hostgroups|intersect(group_names)|list != []
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Add Authorized Keys
  template:
    src: authorized_keys.j2
    dest: "{{ item.home|default('/home/' ~ item.name) }}/.ssh/authorized_keys"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0600"
  when: item.keys is defined and item.keys and (item.hostgroups == 'all' or inventory_hostname in item.hostgroups or item.hostgroups|intersect(group_names)|list != [])
  loop: '{{ users }}'
  loop_control:
    label: "{{ item.name }}"
